<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="a01078" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Hack::Chips::NAnd</compoundname>
    <basecompoundref refid="a01002" prot="public" virt="non-virtual">Hack::Chips::Chip&lt; uint8_t, 8 &gt;</basecompoundref>
    <includes local="no">Source/Chips/NAnd.h</includes>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01078_1a3772243fa8a59c6b886ee562f89c50d4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::NAnd::evaluate</definition>
        <argsstring>()</argsstring>
        <name>evaluate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/NAnd.h" line="30" column="1" bodyfile="Source/Chips/Nand.cpp" bodystart="43" bodyend="51"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01078_1a31aef311594a9db49574c4c71c35511f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hack::Chips::NAnd::NAnd</definition>
        <argsstring>()</argsstring>
        <name>NAnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/NAnd.h" line="33" column="1" bodyfile="Source/Chips/Nand.cpp" bodystart="26" bodyend="29"/>
        <references refid="a01002_1a5a604431fa35bc87e0d7f4328b4ad4a1" compoundref="a00485" startline="112" endline="115">Hack::Chips::Chip&lt; uint8_t, 8 &gt;::assignBit</references>
      </memberdef>
      <memberdef kind="function" id="a01078_1a411d267e518109d93956031c70e54b46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hack::Chips::NAnd::getOut</definition>
        <argsstring>()</argsstring>
        <name>getOut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/NAnd.h" line="37" column="1" bodyfile="Source/Chips/Nand.cpp" bodystart="53" bodyend="58"/>
        <references refid="a01002_1aef5a1c7bf3e9b65a35b55a008b5463ac" compoundref="a00485" startline="100" endline="103">Hack::Chips::Chip&lt; uint8_t, 8 &gt;::getBit</references>
      </memberdef>
      <memberdef kind="function" id="a01078_1a64aa0dd9fef3c5a8a83d448927bd8872" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::NAnd::setA</definition>
        <argsstring>(bool v)</argsstring>
        <name>setA</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/NAnd.h" line="35" column="1" bodyfile="Source/Chips/Nand.cpp" bodystart="31" bodyend="35"/>
        <references refid="a01002_1a1971f958edb5fa83790baa14c9d39ee8" compoundref="a00485" startline="124" endline="127">Hack::Chips::Chip&lt; uint8_t, 8 &gt;::applyBit</references>
        <references refid="a01002_1a1240a9c5045e3dfcb5595700b6c474d6" compoundref="a00485" startline="106" endline="109">Hack::Chips::Chip&lt; uint8_t, 8 &gt;::setBit</references>
      </memberdef>
      <memberdef kind="function" id="a01078_1abf9e611c3c01beefabd11692f192d8b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::Chips::NAnd::setB</definition>
        <argsstring>(bool v)</argsstring>
        <name>setB</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Chips/NAnd.h" line="36" column="1" bodyfile="Source/Chips/Nand.cpp" bodystart="37" bodyend="41"/>
        <references refid="a01002_1a1971f958edb5fa83790baa14c9d39ee8" compoundref="a00485" startline="124" endline="127">Hack::Chips::Chip&lt; uint8_t, 8 &gt;::applyBit</references>
        <references refid="a01002_1a1240a9c5045e3dfcb5595700b6c474d6" compoundref="a00485" startline="106" endline="109">Hack::Chips::Chip&lt; uint8_t, 8 &gt;::setBit</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="199">
        <label>Hack::Chips::Chip&lt; uint8_t, 8 &gt;</label>
        <link refid="a01002"/>
      </node>
      <node id="198">
        <label>Hack::Chips::NAnd</label>
        <link refid="a01078"/>
        <childnode refid="199" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="202">
        <label>uint8_t</label>
        <link refid="a01382"/>
      </node>
      <node id="201">
        <label>Hack::Chips::Chip&lt; uint8_t, 8 &gt;</label>
        <link refid="a01002"/>
        <childnode refid="202" relation="usage">
          <edgelabel>_bits</edgelabel>
        </childnode>
      </node>
      <node id="200">
        <label>Hack::Chips::NAnd</label>
        <link refid="a01078"/>
        <childnode refid="201" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Source/Chips/NAnd.h" line="28" column="1" bodyfile="Source/Chips/NAnd.h" bodystart="27" bodyend="38"/>
    <listofallmembers>
      <member refid="a01002_1a301128353dd4d1c24a1a0ad7b933ceda" prot="protected" virt="non-virtual"><scope>Hack::Chips::NAnd</scope><name>_bits</name></member>
      <member refid="a01002_1a1971f958edb5fa83790baa14c9d39ee8" prot="public" virt="non-virtual"><scope>Hack::Chips::NAnd</scope><name>applyBit</name></member>
      <member refid="a01002_1a5a604431fa35bc87e0d7f4328b4ad4a1" prot="public" virt="non-virtual"><scope>Hack::Chips::NAnd</scope><name>assignBit</name></member>
      <member refid="a01002_1a485588367ebaefcaaec8847faffe8870" prot="public" virt="non-virtual"><scope>Hack::Chips::NAnd</scope><name>Chip</name></member>
      <member refid="a01002_1a21ec8cfbaba9e08deb3607c7eff9ad63" prot="public" virt="non-virtual"><scope>Hack::Chips::NAnd</scope><name>clearBit</name></member>
      <member refid="a01078_1a3772243fa8a59c6b886ee562f89c50d4" prot="private" virt="non-virtual"><scope>Hack::Chips::NAnd</scope><name>evaluate</name></member>
      <member refid="a01002_1aef5a1c7bf3e9b65a35b55a008b5463ac" prot="public" virt="non-virtual"><scope>Hack::Chips::NAnd</scope><name>getBit</name></member>
      <member refid="a01078_1a411d267e518109d93956031c70e54b46" prot="public" virt="non-virtual"><scope>Hack::Chips::NAnd</scope><name>getOut</name></member>
      <member refid="a01002_1a63bb368bb0827830235759b33718d1b4" prot="protected" virt="virtual"><scope>Hack::Chips::NAnd</scope><name>isDirty</name></member>
      <member refid="a01078_1a31aef311594a9db49574c4c71c35511f" prot="public" virt="non-virtual"><scope>Hack::Chips::NAnd</scope><name>NAnd</name></member>
      <member refid="a01078_1a64aa0dd9fef3c5a8a83d448927bd8872" prot="public" virt="non-virtual"><scope>Hack::Chips::NAnd</scope><name>setA</name></member>
      <member refid="a01078_1abf9e611c3c01beefabd11692f192d8b0" prot="public" virt="non-virtual"><scope>Hack::Chips::NAnd</scope><name>setB</name></member>
      <member refid="a01002_1a1240a9c5045e3dfcb5595700b6c474d6" prot="public" virt="non-virtual"><scope>Hack::Chips::NAnd</scope><name>setBit</name></member>
      <member refid="a01002_1a512ea103436d620cad8b3fc80ca9c06c" prot="public" virt="virtual"><scope>Hack::Chips::NAnd</scope><name>~Chip</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
