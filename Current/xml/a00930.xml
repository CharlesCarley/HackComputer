<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="a00930" kind="class" language="C++" prot="public">
    <compoundname>HackCompiler</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a00930_1abfc8625955dc025f96840c9020d57409" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool HackCompiler::_deleteStream</definition>
        <argsstring></argsstring>
        <name>_deleteStream</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Compiler/Main.cpp" line="100" column="1" bodyfile="Source/Compiler/Compiler/Main.cpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a00930_1a65c207e94352e2c5f3ee58da428b3792" prot="private" static="no" mutable="no">
        <type><ref refid="a00906_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref></type>
        <definition>String HackCompiler::_dir</definition>
        <argsstring></argsstring>
        <name>_dir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Analyzer/Main.cpp" line="78" column="1" bodyfile="Source/Compiler/Analyzer/Main.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a00930_1a634622915a1891ad73ee82c686564662" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool HackCompiler::_dot</definition>
        <argsstring></argsstring>
        <name>_dot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Analyzer/Main.cpp" line="77" column="1" bodyfile="Source/Compiler/Analyzer/Main.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a00930_1a43975adcf76b1276f3a1f8e95624e1b8" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int HackCompiler::_inFormat</definition>
        <argsstring></argsstring>
        <name>_inFormat</name>
        <initializer>{IN_FMT_JACK}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Compiler/Main.cpp" line="103" column="1" bodyfile="Source/Compiler/Compiler/Main.cpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a00930_1aa9b86572f062f83769bda5ee71756975" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string HackCompiler::_input</definition>
        <argsstring></argsstring>
        <name>_input</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Main.cpp" line="51" column="1" bodyfile="Source/Assembler/Main.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a00930_1ad30ff67f2fa80ca7329d469cdc7aaae6" prot="private" static="no" mutable="no">
        <type><ref refid="a00906_1a069b2b49d9f6855f21d1077654021188" kindref="member">InputFileStream</ref></type>
        <definition>InputFileStream HackCompiler::_input</definition>
        <argsstring></argsstring>
        <name>_input</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Compiler/Main.cpp" line="99" column="1" bodyfile="Source/Compiler/Compiler/Main.cpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a00930_1a989a39e61bcba9869b970d165eb7ab8c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int HackCompiler::_outFormat</definition>
        <argsstring></argsstring>
        <name>_outFormat</name>
        <initializer>{OUT_FMT_MC}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Compiler/Main.cpp" line="102" column="1" bodyfile="Source/Compiler/Compiler/Main.cpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a00930_1ad7f46df018180824bb7f05603488c86c" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string HackCompiler::_output</definition>
        <argsstring></argsstring>
        <name>_output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Main.cpp" line="52" column="1" bodyfile="Source/Assembler/Main.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a00930_1a1adf6ea766d61fb743e4add9de74e39a" prot="private" static="no" mutable="no">
        <type><ref refid="a00906_1a404ae4dff97be2fec362955db83690da" kindref="member">OStream</ref> *</type>
        <definition>OStream* HackCompiler::_output</definition>
        <argsstring></argsstring>
        <name>_output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Compiler/Main.cpp" line="101" column="1" bodyfile="Source/Compiler/Compiler/Main.cpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a00930_1ae9f2083c1c708c20168ce54a5c5093df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HackCompiler::HackCompiler</definition>
        <argsstring>()=default</argsstring>
        <name>HackCompiler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Main.cpp" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00930_1ae9f2083c1c708c20168ce54a5c5093df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HackCompiler::HackCompiler</definition>
        <argsstring>()=default</argsstring>
        <name>HackCompiler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Main.cpp" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00930_1a0cd61c4a9da3f3b1369f79b47cee8dbe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HackCompiler::HackCompiler</definition>
        <argsstring>()</argsstring>
        <name>HackCompiler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Analyzer/Main.cpp" line="81" column="1" bodyfile="Source/Compiler/Analyzer/Main.cpp" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="a00930_1a0cd61c4a9da3f3b1369f79b47cee8dbe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HackCompiler::HackCompiler</definition>
        <argsstring>()</argsstring>
        <name>HackCompiler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Compiler/Main.cpp" line="243" column="1" bodyfile="Source/Compiler/Compiler/Main.cpp" bodystart="243" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="a00930_1ad78c2aa7ae6395a716717305314245bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HackCompiler::~HackCompiler</definition>
        <argsstring>()</argsstring>
        <name>~HackCompiler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Compiler/Main.cpp" line="248" column="1" bodyfile="Source/Compiler/Compiler/Main.cpp" bodystart="248" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="a00930_1a8f86c504a19e1eb3cd19c72b7d530161" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HackCompiler::compileAssemblySource</definition>
        <argsstring>()</argsstring>
        <name>compileAssemblySource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Compiler/Main.cpp" line="331" column="1" bodyfile="Source/Compiler/Compiler/Main.cpp" bodystart="331" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="a00930_1ad0f8f3c3d32dc224fbdf7913c251441a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HackCompiler::compileJackSource</definition>
        <argsstring>()</argsstring>
        <name>compileJackSource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Compiler/Main.cpp" line="301" column="1" bodyfile="Source/Compiler/Compiler/Main.cpp" bodystart="301" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="a00930_1a62740882d6d03d8356f3457377bc18a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HackCompiler::compileVmSource</definition>
        <argsstring>()</argsstring>
        <name>compileVmSource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Compiler/Main.cpp" line="318" column="1" bodyfile="Source/Compiler/Compiler/Main.cpp" bodystart="318" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="a00930_1a9d1fc868e8a874f5327f01d3a6c93893" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int HackCompiler::go</definition>
        <argsstring>() const</argsstring>
        <name>go</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Main.cpp" line="79" column="1" bodyfile="Source/Assembler/Main.cpp" bodystart="79" bodyend="88"/>
        <references refid="a01290_1a4668ec9b913931ce518de6d7f92fb4e0" compoundref="a00836" startline="76" endline="89">Hack::ParserBase::parse</references>
        <references refid="a01290_1a4560ce70fee098d7508b053b409c1d19" compoundref="a00836" startline="107" endline="114">Hack::ParserBase::write</references>
      </memberdef>
      <memberdef kind="function" id="a00930_1a9d1fc868e8a874f5327f01d3a6c93893" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int HackCompiler::go</definition>
        <argsstring>() const</argsstring>
        <name>go</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Main.cpp" line="81" column="1" bodyfile="Source/VirtualMachine/Main.cpp" bodystart="81" bodyend="99"/>
        <references refid="a01290_1a4668ec9b913931ce518de6d7f92fb4e0" compoundref="a00836" startline="76" endline="89">Hack::ParserBase::parse</references>
        <references refid="a01290_1a4560ce70fee098d7508b053b409c1d19" compoundref="a00836" startline="107" endline="114">Hack::ParserBase::write</references>
      </memberdef>
      <memberdef kind="function" id="a00930_1a9d1fc868e8a874f5327f01d3a6c93893" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int HackCompiler::go</definition>
        <argsstring>() const</argsstring>
        <name>go</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Analyzer/Main.cpp" line="112" column="1" bodyfile="Source/Compiler/Analyzer/Main.cpp" bodystart="112" bodyend="156"/>
        <references refid="a01290_1a4668ec9b913931ce518de6d7f92fb4e0" compoundref="a00836" startline="76" endline="89">Hack::ParserBase::parse</references>
        <references refid="a01290_1a4560ce70fee098d7508b053b409c1d19" compoundref="a00836" startline="107" endline="114">Hack::ParserBase::write</references>
        <references refid="a01266_1ad552d982f58950c324eaebd2dfbd1fe2" compoundref="a00818" startline="64" endline="67">Hack::Exception::what</references>
      </memberdef>
      <memberdef kind="function" id="a00930_1a7ddcd2b46bd2a6478d0231f48dc3c4d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int HackCompiler::go</definition>
        <argsstring>()</argsstring>
        <name>go</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Compiler/Main.cpp" line="339" column="1" bodyfile="Source/Compiler/Compiler/Main.cpp" bodystart="339" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="a00930_1aceee5ebb13d80d2a4d0b58596e9b7988" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool HackCompiler::parse</definition>
        <argsstring>(const int argc, char **argv)</argsstring>
        <name>parse</name>
        <param>
          <type>const int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Assembler/Main.cpp" line="57" column="1" bodyfile="Source/Assembler/Main.cpp" bodystart="57" bodyend="77"/>
        <references refid="a01250_1aaaa3cc28de66e1e9b2f64cd1e51f2fe1" compoundref="a01614" startline="178" endline="181">Hack::CommandLine::Parser::setHelpText</references>
        <references refid="a01250_1a304e3e2f4af07df0fb6c9cde37040e27" compoundref="a01614" startline="52" endline="176">Hack::CommandLine::Parser::parse</references>
        <references refid="a01250_1a9da3aa8c56bad342c3a7c30eb98d9c17" compoundref="a01614" startline="245" endline="255">Hack::CommandLine::Parser::string</references>
        <references refid="a01250_1ac7bc3f3c9e8b89b4a39b8dd9a36b713f" compoundref="a01626" startline="88" endline="91">Hack::CommandLine::Parser::arguments</references>
        <references refid="a01250_1afd63d6cb40243606fe5d6c944754eb5b" compoundref="a01614" startline="257" endline="262">Hack::CommandLine::Parser::usage</references>
      </memberdef>
      <memberdef kind="function" id="a00930_1aceee5ebb13d80d2a4d0b58596e9b7988" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool HackCompiler::parse</definition>
        <argsstring>(const int argc, char **argv)</argsstring>
        <name>parse</name>
        <param>
          <type>const int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Main.cpp" line="59" column="1" bodyfile="Source/VirtualMachine/Main.cpp" bodystart="59" bodyend="79"/>
        <references refid="a01250_1aaaa3cc28de66e1e9b2f64cd1e51f2fe1" compoundref="a01614" startline="178" endline="181">Hack::CommandLine::Parser::setHelpText</references>
        <references refid="a01250_1a304e3e2f4af07df0fb6c9cde37040e27" compoundref="a01614" startline="52" endline="176">Hack::CommandLine::Parser::parse</references>
        <references refid="a01250_1a9da3aa8c56bad342c3a7c30eb98d9c17" compoundref="a01614" startline="245" endline="255">Hack::CommandLine::Parser::string</references>
        <references refid="a01250_1ac7bc3f3c9e8b89b4a39b8dd9a36b713f" compoundref="a01626" startline="88" endline="91">Hack::CommandLine::Parser::arguments</references>
        <references refid="a01250_1afd63d6cb40243606fe5d6c944754eb5b" compoundref="a01614" startline="257" endline="262">Hack::CommandLine::Parser::usage</references>
      </memberdef>
      <memberdef kind="function" id="a00930_1aceee5ebb13d80d2a4d0b58596e9b7988" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool HackCompiler::parse</definition>
        <argsstring>(const int argc, char **argv)</argsstring>
        <name>parse</name>
        <param>
          <type>const int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Analyzer/Main.cpp" line="86" column="1" bodyfile="Source/Compiler/Analyzer/Main.cpp" bodystart="86" bodyend="110"/>
        <references refid="a01250_1a304e3e2f4af07df0fb6c9cde37040e27" compoundref="a01614" startline="52" endline="176">Hack::CommandLine::Parser::parse</references>
        <references refid="a01250_1a9da3aa8c56bad342c3a7c30eb98d9c17" compoundref="a01614" startline="245" endline="255">Hack::CommandLine::Parser::string</references>
        <references refid="a01250_1adbd749e0938e2b359ee7f719864d1451" compoundref="a01614" startline="205" endline="210">Hack::CommandLine::Parser::isPresent</references>
        <references refid="a01250_1ac7bc3f3c9e8b89b4a39b8dd9a36b713f" compoundref="a01626" startline="88" endline="91">Hack::CommandLine::Parser::arguments</references>
        <references refid="a01250_1afd63d6cb40243606fe5d6c944754eb5b" compoundref="a01614" startline="257" endline="262">Hack::CommandLine::Parser::usage</references>
      </memberdef>
      <memberdef kind="function" id="a00930_1aceee5ebb13d80d2a4d0b58596e9b7988" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool HackCompiler::parse</definition>
        <argsstring>(const int argc, char **argv)</argsstring>
        <name>parse</name>
        <param>
          <type>const int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Compiler/Main.cpp" line="257" column="1" bodyfile="Source/Compiler/Compiler/Main.cpp" bodystart="257" bodyend="299"/>
        <references refid="a01250_1aaaa3cc28de66e1e9b2f64cd1e51f2fe1" compoundref="a01614" startline="178" endline="181">Hack::CommandLine::Parser::setHelpText</references>
        <references refid="a01250_1a304e3e2f4af07df0fb6c9cde37040e27" compoundref="a01614" startline="52" endline="176">Hack::CommandLine::Parser::parse</references>
        <references refid="a01250_1a9da3aa8c56bad342c3a7c30eb98d9c17" compoundref="a01614" startline="245" endline="255">Hack::CommandLine::Parser::string</references>
        <references refid="a01250_1ac7bc3f3c9e8b89b4a39b8dd9a36b713f" compoundref="a01626" startline="88" endline="91">Hack::CommandLine::Parser::arguments</references>
        <references refid="a01250_1afd63d6cb40243606fe5d6c944754eb5b" compoundref="a01614" startline="257" endline="262">Hack::CommandLine::Parser::usage</references>
        <references refid="a01250_1adbd749e0938e2b359ee7f719864d1451" compoundref="a01614" startline="205" endline="210">Hack::CommandLine::Parser::isPresent</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a00930_1a145366b6a33af8b0890679a251548507" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HackCompiler::assemble</definition>
        <argsstring>(IStream &amp;input) const</argsstring>
        <name>assemble</name>
        <param>
          <type><ref refid="a00906_1a830c8eb3c005ef2fbc470e0b141b93c5" kindref="member">IStream</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Compiler/Main.cpp" line="178" column="1" bodyfile="Source/Compiler/Compiler/Main.cpp" bodystart="178" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="a00930_1a0dc538438bab0f5738792eb1759b8d63" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HackCompiler::compile</definition>
        <argsstring>(IStream &amp;input) const</argsstring>
        <name>compile</name>
        <param>
          <type><ref refid="a00906_1a830c8eb3c005ef2fbc470e0b141b93c5" kindref="member">IStream</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Compiler/Main.cpp" line="206" column="1" bodyfile="Source/Compiler/Compiler/Main.cpp" bodystart="206" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="a00930_1a5ad7fcf652f0cf1f6c48b70e9b46acd5" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HackCompiler::generate</definition>
        <argsstring>(IStream &amp;input) const</argsstring>
        <name>generate</name>
        <param>
          <type><ref refid="a00906_1a830c8eb3c005ef2fbc470e0b141b93c5" kindref="member">IStream</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Compiler/Main.cpp" line="188" column="1" bodyfile="Source/Compiler/Compiler/Main.cpp" bodystart="188" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="a00930_1a66024ec31e42109f6ad5cf638027e27a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HackCompiler::setInputFormat</definition>
        <argsstring>(const String &amp;format)</argsstring>
        <name>setInputFormat</name>
        <param>
          <type>const <ref refid="a00906_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Compiler/Main.cpp" line="105" column="1" bodyfile="Source/Compiler/Compiler/Main.cpp" bodystart="105" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="a00930_1a4551f344007aa287c3ca248660b01e85" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HackCompiler::setOutputFormat</definition>
        <argsstring>(const String &amp;format)</argsstring>
        <name>setOutputFormat</name>
        <param>
          <type>const <ref refid="a00906_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Compiler/Main.cpp" line="117" column="1" bodyfile="Source/Compiler/Compiler/Main.cpp" bodystart="117" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="a00930_1af3d6ebc5090948d91f265091a79bac54" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HackCompiler::unknownOutput</definition>
        <argsstring>() const</argsstring>
        <name>unknownOutput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Compiler/Compiler/Main.cpp" line="133" column="1" bodyfile="Source/Compiler/Compiler/Main.cpp" bodystart="133" bodyend="176"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Source/Assembler/Main.cpp" line="49" column="1" bodyfile="Source/Assembler/Main.cpp" bodystart="48" bodyend="89"/>
    <listofallmembers>
      <member refid="a00930_1abfc8625955dc025f96840c9020d57409" prot="private" virt="non-virtual"><scope>HackCompiler</scope><name>_deleteStream</name></member>
      <member refid="a00930_1a65c207e94352e2c5f3ee58da428b3792" prot="private" virt="non-virtual"><scope>HackCompiler</scope><name>_dir</name></member>
      <member refid="a00930_1a634622915a1891ad73ee82c686564662" prot="private" virt="non-virtual"><scope>HackCompiler</scope><name>_dot</name></member>
      <member refid="a00930_1a43975adcf76b1276f3a1f8e95624e1b8" prot="private" virt="non-virtual"><scope>HackCompiler</scope><name>_inFormat</name></member>
      <member refid="a00930_1aa9b86572f062f83769bda5ee71756975" prot="private" virt="non-virtual"><scope>HackCompiler</scope><name>_input</name></member>
      <member refid="a00930_1ad30ff67f2fa80ca7329d469cdc7aaae6" prot="private" virt="non-virtual"><scope>HackCompiler</scope><name>_input</name></member>
      <member refid="a00930_1a989a39e61bcba9869b970d165eb7ab8c" prot="private" virt="non-virtual"><scope>HackCompiler</scope><name>_outFormat</name></member>
      <member refid="a00930_1ad7f46df018180824bb7f05603488c86c" prot="private" virt="non-virtual"><scope>HackCompiler</scope><name>_output</name></member>
      <member refid="a00930_1a1adf6ea766d61fb743e4add9de74e39a" prot="private" virt="non-virtual"><scope>HackCompiler</scope><name>_output</name></member>
      <member refid="a00930_1a145366b6a33af8b0890679a251548507" prot="private" virt="non-virtual"><scope>HackCompiler</scope><name>assemble</name></member>
      <member refid="a00930_1a0dc538438bab0f5738792eb1759b8d63" prot="private" virt="non-virtual"><scope>HackCompiler</scope><name>compile</name></member>
      <member refid="a00930_1a8f86c504a19e1eb3cd19c72b7d530161" prot="public" virt="non-virtual"><scope>HackCompiler</scope><name>compileAssemblySource</name></member>
      <member refid="a00930_1ad0f8f3c3d32dc224fbdf7913c251441a" prot="public" virt="non-virtual"><scope>HackCompiler</scope><name>compileJackSource</name></member>
      <member refid="a00930_1a62740882d6d03d8356f3457377bc18a9" prot="public" virt="non-virtual"><scope>HackCompiler</scope><name>compileVmSource</name></member>
      <member refid="a00930_1a5ad7fcf652f0cf1f6c48b70e9b46acd5" prot="private" virt="non-virtual"><scope>HackCompiler</scope><name>generate</name></member>
      <member refid="a00930_1a9d1fc868e8a874f5327f01d3a6c93893" prot="public" virt="non-virtual"><scope>HackCompiler</scope><name>go</name></member>
      <member refid="a00930_1a9d1fc868e8a874f5327f01d3a6c93893" prot="public" virt="non-virtual"><scope>HackCompiler</scope><name>go</name></member>
      <member refid="a00930_1a7ddcd2b46bd2a6478d0231f48dc3c4d2" prot="public" virt="non-virtual"><scope>HackCompiler</scope><name>go</name></member>
      <member refid="a00930_1a9d1fc868e8a874f5327f01d3a6c93893" prot="public" virt="non-virtual"><scope>HackCompiler</scope><name>go</name></member>
      <member refid="a00930_1ae9f2083c1c708c20168ce54a5c5093df" prot="public" virt="non-virtual"><scope>HackCompiler</scope><name>HackCompiler</name></member>
      <member refid="a00930_1a0cd61c4a9da3f3b1369f79b47cee8dbe" prot="public" virt="non-virtual"><scope>HackCompiler</scope><name>HackCompiler</name></member>
      <member refid="a00930_1a0cd61c4a9da3f3b1369f79b47cee8dbe" prot="public" virt="non-virtual"><scope>HackCompiler</scope><name>HackCompiler</name></member>
      <member refid="a00930_1ae9f2083c1c708c20168ce54a5c5093df" prot="public" virt="non-virtual"><scope>HackCompiler</scope><name>HackCompiler</name></member>
      <member refid="a00930_1aceee5ebb13d80d2a4d0b58596e9b7988" prot="public" virt="non-virtual"><scope>HackCompiler</scope><name>parse</name></member>
      <member refid="a00930_1aceee5ebb13d80d2a4d0b58596e9b7988" prot="public" virt="non-virtual"><scope>HackCompiler</scope><name>parse</name></member>
      <member refid="a00930_1aceee5ebb13d80d2a4d0b58596e9b7988" prot="public" virt="non-virtual"><scope>HackCompiler</scope><name>parse</name></member>
      <member refid="a00930_1aceee5ebb13d80d2a4d0b58596e9b7988" prot="public" virt="non-virtual"><scope>HackCompiler</scope><name>parse</name></member>
      <member refid="a00930_1a66024ec31e42109f6ad5cf638027e27a" prot="private" virt="non-virtual"><scope>HackCompiler</scope><name>setInputFormat</name></member>
      <member refid="a00930_1a4551f344007aa287c3ca248660b01e85" prot="private" virt="non-virtual"><scope>HackCompiler</scope><name>setOutputFormat</name></member>
      <member refid="a00930_1af3d6ebc5090948d91f265091a79bac54" prot="private" virt="non-virtual"><scope>HackCompiler</scope><name>unknownOutput</name></member>
      <member refid="a00930_1ad78c2aa7ae6395a716717305314245bf" prot="public" virt="non-virtual"><scope>HackCompiler</scope><name>~HackCompiler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
