<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="a01208" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Hack::Computer::DebugRuntime</compoundname>
    <basecompoundref refid="a01212" prot="public" virt="non-virtual">Hack::Computer::RuntimeInterface</basecompoundref>
    <includes local="no">Source/Computer/DebugRuntime.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01208_1a76670657c1725ecef554d76bb46d597b" prot="private" static="no" mutable="no">
        <type><ref refid="a01204" kindref="compound">DebugRuntimePrivate</ref> *</type>
        <definition>DebugRuntimePrivate* Hack::Computer::DebugRuntime::_private</definition>
        <argsstring></argsstring>
        <name>_private</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Computer/DebugRuntime.h" line="33" column="1" bodyfile="Source/Computer/DebugRuntime.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="a01208_1ace069a8cbf49c271f047e62868763c2e" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int16_t</type>
        <definition>int16_t Hack::Computer::DebugRuntime::getRate</definition>
        <argsstring>() const override</argsstring>
        <name>getRate</name>
        <reimplements refid="a01212_1a0f5eca7470888a3c5190dd9c1ddc3f67">getRate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Computer/DebugRuntime.h" line="35" column="1" bodyfile="Source/Computer/DebugRuntime.h" bodystart="35" bodyend="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01208_1a0e32a9d599cd72cea3b394d325c1f6cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hack::Computer::DebugRuntime::DebugRuntime</definition>
        <argsstring>()</argsstring>
        <name>DebugRuntime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Computer/DebugRuntime.h" line="41" column="1" bodyfile="Source/Computer/DebugRuntime.cpp" bodystart="535" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="a01208_1a651c25202fe8c26358f7be25c3fb5536" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hack::Computer::DebugRuntime::~DebugRuntime</definition>
        <argsstring>() override</argsstring>
        <name>~DebugRuntime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Computer/DebugRuntime.h" line="43" column="1" bodyfile="Source/Computer/DebugRuntime.cpp" bodystart="540" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="a01208_1acce22e29456976ba86f505c06b5fff81" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Hack::Computer::DebugRuntime::exitRequest</definition>
        <argsstring>() const override</argsstring>
        <name>exitRequest</name>
        <reimplements refid="a01212_1ae4fb11811510339381b65be887827dfc">exitRequest</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Computer/DebugRuntime.h" line="49" column="1" bodyfile="Source/Computer/DebugRuntime.cpp" bodystart="558" bodyend="561"/>
        <references refid="a01204_1a8e827619e3caeeed369299fe5228b7ff" compoundref="a00764" startline="108" endline="111">Hack::Computer::DebugRuntimePrivate::input</references>
        <references refid="a00902_1a7553833a41980e8c2bae00177d41129ead7a3bc54fb41225d6588c6fb307f0bcf" compoundref="a00845" startline="90">Hack::Ui::PR_EXIT</references>
      </memberdef>
      <memberdef kind="function" id="a01208_1aee00ac57512447b7655ed7cdc54b025d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Hack::Computer::DebugRuntime::flushMemory</definition>
        <argsstring>(Chips::Computer *computer) const override</argsstring>
        <name>flushMemory</name>
        <reimplements refid="a01212_1af845999e44531fc6282d028402131fa9">flushMemory</reimplements>
        <param>
          <type><ref refid="a00996" kindref="compound">Chips::Computer</ref> *</type>
          <declname>computer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Computer/DebugRuntime.h" line="53" column="1" bodyfile="Source/Computer/DebugRuntime.cpp" bodystart="568" bodyend="571"/>
        <references refid="a01204_1a05e86f865706ec018a5856b2cae527fe" compoundref="a00764" startline="141" endline="151">Hack::Computer::DebugRuntimePrivate::flushMemory</references>
      </memberdef>
      <memberdef kind="function" id="a01208_1a8514e728f96721d941711bf25d74517a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Hack::Computer::DebugRuntime::initialize</definition>
        <argsstring>(Chips::Computer *computer, Chips::Screen *) const override</argsstring>
        <name>initialize</name>
        <reimplements refid="a01212_1acfdf1e97cbbcc9a9f13ad26e6062b8d0">initialize</reimplements>
        <param>
          <type><ref refid="a00996" kindref="compound">Chips::Computer</ref> *</type>
          <declname>computer</declname>
        </param>
        <param>
          <type><ref refid="a00890_1a205aa97050ad01560145252139c81057" kindref="member">Chips::Screen</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Computer/DebugRuntime.h" line="47" column="1" bodyfile="Source/Computer/DebugRuntime.cpp" bodystart="552" bodyend="556"/>
        <references refid="a01204_1ab39c71410b1af25c8910ddef0a653ebe" compoundref="a00764" startline="91" endline="106">Hack::Computer::DebugRuntimePrivate::initialize</references>
        <references refid="a01204_1a05e86f865706ec018a5856b2cae527fe" compoundref="a00764" startline="141" endline="151">Hack::Computer::DebugRuntimePrivate::flushMemory</references>
      </memberdef>
      <memberdef kind="function" id="a01208_1a4811a14fcdfa33479b429ecd07bbc9d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Hack::Computer::DebugRuntime::processEvents</definition>
        <argsstring>(Chips::Computer *computer) const override</argsstring>
        <name>processEvents</name>
        <reimplements refid="a01212_1a3cb1ab52903aaedabb0c9d49b013aab4">processEvents</reimplements>
        <param>
          <type><ref refid="a00996" kindref="compound">Chips::Computer</ref> *</type>
          <declname>computer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Computer/DebugRuntime.h" line="51" column="1" bodyfile="Source/Computer/DebugRuntime.cpp" bodystart="563" bodyend="566"/>
        <references refid="a01204_1afb2e833f6eb3a365f1d734b51e9ee359" compoundref="a00764" startline="118" endline="139">Hack::Computer::DebugRuntimePrivate::processEvents</references>
      </memberdef>
      <memberdef kind="function" id="a01208_1ab171edd61256c2eac08cdc2528a551f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Hack::Computer::DebugRuntime::shouldUpdate</definition>
        <argsstring>() override</argsstring>
        <name>shouldUpdate</name>
        <reimplements refid="a01212_1a44e6d9da00af26f22941e1a0a540e797">shouldUpdate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Computer/DebugRuntime.h" line="45" column="1" bodyfile="Source/Computer/DebugRuntime.cpp" bodystart="546" bodyend="550"/>
        <references refid="a01204_1a8e827619e3caeeed369299fe5228b7ff" compoundref="a00764" startline="108" endline="111">Hack::Computer::DebugRuntimePrivate::input</references>
        <references refid="a00902_1a7553833a41980e8c2bae00177d41129ea35bf1e881e438245e59ccdf1cd1d0774" compoundref="a00845" startline="131">Hack::Ui::PR_UP_ARROW</references>
        <references refid="a00902_1a7553833a41980e8c2bae00177d41129eadce783d1df91b3fd26fd5817f0ff07c6" compoundref="a00845" startline="121">Hack::Ui::PR_R</references>
        <references refid="a01204_1a74f4ddc2111c8b2112b70775dfc7df71" compoundref="a00764" startline="113" endline="116">Hack::Computer::DebugRuntimePrivate::block</references>
      </memberdef>
      <memberdef kind="function" id="a01208_1a3bd47a61275e31af0bf9056a6097712c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Hack::Computer::DebugRuntime::update</definition>
        <argsstring>(Chips::Computer *computer) const override</argsstring>
        <name>update</name>
        <reimplements refid="a01212_1a5fe5dfa099bbf6ded85b29028440466d">update</reimplements>
        <param>
          <type><ref refid="a00996" kindref="compound">Chips::Computer</ref> *</type>
          <declname>computer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Computer/DebugRuntime.h" line="55" column="1" bodyfile="Source/Computer/DebugRuntime.cpp" bodystart="573" bodyend="580"/>
        <references refid="a00996_1aa44e98396b5191c503bd5255fe0ffa1f" compoundref="a00476" startline="104" endline="137">Hack::Chips::Computer::update</references>
        <references refid="a00996_1a2dbfa6b9bb02786f4e91770527d8624b" compoundref="a00476" startline="80" endline="101">Hack::Chips::Computer::captureState</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="372">
        <label>Hack::Computer::RuntimeInterface</label>
        <link refid="a01212"/>
      </node>
      <node id="371">
        <label>Hack::Computer::DebugRuntime</label>
        <link refid="a01208"/>
        <childnode refid="372" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="374">
        <label>Hack::Computer::RuntimeInterface</label>
        <link refid="a01212"/>
      </node>
      <node id="373">
        <label>Hack::Computer::DebugRuntime</label>
        <link refid="a01208"/>
        <childnode refid="374" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Source/Computer/DebugRuntime.h" line="31" column="1" bodyfile="Source/Computer/DebugRuntime.h" bodystart="30" bodyend="56"/>
    <listofallmembers>
      <member refid="a01208_1a76670657c1725ecef554d76bb46d597b" prot="private" virt="non-virtual"><scope>Hack::Computer::DebugRuntime</scope><name>_private</name></member>
      <member refid="a01208_1a0e32a9d599cd72cea3b394d325c1f6cf" prot="public" virt="non-virtual"><scope>Hack::Computer::DebugRuntime</scope><name>DebugRuntime</name></member>
      <member refid="a01208_1acce22e29456976ba86f505c06b5fff81" prot="public" virt="virtual"><scope>Hack::Computer::DebugRuntime</scope><name>exitRequest</name></member>
      <member refid="a01208_1aee00ac57512447b7655ed7cdc54b025d" prot="public" virt="virtual"><scope>Hack::Computer::DebugRuntime</scope><name>flushMemory</name></member>
      <member refid="a01208_1ace069a8cbf49c271f047e62868763c2e" prot="private" virt="virtual"><scope>Hack::Computer::DebugRuntime</scope><name>getRate</name></member>
      <member refid="a01208_1a8514e728f96721d941711bf25d74517a" prot="public" virt="virtual"><scope>Hack::Computer::DebugRuntime</scope><name>initialize</name></member>
      <member refid="a01208_1a4811a14fcdfa33479b429ecd07bbc9d1" prot="public" virt="virtual"><scope>Hack::Computer::DebugRuntime</scope><name>processEvents</name></member>
      <member refid="a01212_1afac6241dfa4f6de4ca3353819786e5e3" prot="public" virt="virtual"><scope>Hack::Computer::DebugRuntime</scope><name>setRate</name></member>
      <member refid="a01208_1ab171edd61256c2eac08cdc2528a551f2" prot="public" virt="virtual"><scope>Hack::Computer::DebugRuntime</scope><name>shouldUpdate</name></member>
      <member refid="a01208_1a3bd47a61275e31af0bf9056a6097712c" prot="public" virt="virtual"><scope>Hack::Computer::DebugRuntime</scope><name>update</name></member>
      <member refid="a01208_1a651c25202fe8c26358f7be25c3fb5536" prot="public" virt="non-virtual"><scope>Hack::Computer::DebugRuntime</scope><name>~DebugRuntime</name></member>
      <member refid="a01212_1a3e09aeb7e6d6907b58f7a2a40636ac37" prot="public" virt="virtual"><scope>Hack::Computer::DebugRuntime</scope><name>~RuntimeInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
