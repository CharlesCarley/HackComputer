<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="a01589" kind="page">
    <compoundname>Hc0501</compoundname>
    <title>Jack Debugger</title>
    <briefdescription>
<para>Implements a debugger the for the .jack source file. </para>    </briefdescription>
    <detaileddescription>
<para>Implements a debugger the for the .jack source file.</para><para><heading level="2">Initial concept</heading>
</para><para>The code generator needs split apart at the Generator::_emitter level so that two separate interfaces may be used.</para><para><itemizedlist>
<listitem><para>.vm Virtual machine generator</para></listitem><listitem><para>.dbg Debug format generator</para></listitem></itemizedlist>
</para><para><heading level="3"></heading>
</para><para>Debug Information requirements,</para><para><itemizedlist>
<listitem><para>It needs the jack source file split apart by line number.</para></listitem><listitem><para>It needs to represent a line as a list of instruction counts.</para></listitem><listitem><para>The debugger needs to iterate over the line number list then for each line number it needs to run the computer update method N times. At the end of each instruction step the Debugger needs to update an output with the current state of the CPU and ram.</para></listitem><listitem><para>At the end of each line iteration loop, the debugger needs to show that one line has been stepped through. From there, it should repeat until the return from main. </para></listitem></itemizedlist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
