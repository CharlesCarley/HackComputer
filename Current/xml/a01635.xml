<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="a01635" kind="class" language="C++" prot="public">
    <compoundname>Hack::VirtualMachine::CodeStream</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a01635_1a1afcfad78f2ac802e729892b1eab1de2" prot="private" static="no" mutable="no">
        <type><ref refid="a00915_1a404ae4dff97be2fec362955db83690da" kindref="member">OStream</ref> *</type>
        <definition>OStream* Hack::VirtualMachine::CodeStream::_s</definition>
        <argsstring></argsstring>
        <name>_s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="32" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a01635_1a2a0387fffb31479984146dca5fa6e7df" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Hack::VirtualMachine::CodeStream::CodeStream</definition>
        <argsstring>(OStream *os)</argsstring>
        <name>CodeStream</name>
        <param>
          <type><ref refid="a00915_1a404ae4dff97be2fec362955db83690da" kindref="member">OStream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="35" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="a01635_1af986393f5cbff6ce44748f241c15c63b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::addDmIntoM</definition>
        <argsstring>() const</argsstring>
        <name>addDmIntoM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="207" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="207" bodyend="210"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a7b3485d5bcdb0077f04a795300192aa1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::addXToD</definition>
        <argsstring>(const int &amp;x0) const</argsstring>
        <name>addXToD</name>
        <param>
          <type>const int &amp;</type>
          <declname>x0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="256" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="256" bodyend="260"/>
        <references refid="a01635_1a175bf06345174fcce65d1191e39a3003" compoundref="a00908" startline="48" endline="51">atAddressOf</references>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a55d42e45337699cea476f3d217d8839b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::andDmIntoM</definition>
        <argsstring>() const</argsstring>
        <name>andDmIntoM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="231" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="231" bodyend="234"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a175bf06345174fcce65d1191e39a3003" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::atAddressOf</definition>
        <argsstring>(const String &amp;value) const</argsstring>
        <name>atAddressOf</name>
        <param>
          <type>const <ref refid="a00915_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="48" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="48" bodyend="51"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1ae5c74307522637dee6db8ae48f8d2a6d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::atAddressOf</definition>
        <argsstring>(const size_t &amp;index) const</argsstring>
        <name>atAddressOf</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="53" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="53" bodyend="56"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a96425b2e3bba2e053c15308f32ed124a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::atDeReferencedAddressOf</definition>
        <argsstring>(const int &amp;index) const</argsstring>
        <name>atDeReferencedAddressOf</name>
        <param>
          <type>const int &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="58" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="58" bodyend="62"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1abbbfef8a14e762f28b7b2be672a4e658" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::compareDIntoX</definition>
        <argsstring>(const int &amp;x0, const int &amp;m0, const int &amp;value) const</argsstring>
        <name>compareDIntoX</name>
        <param>
          <type>const int &amp;</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>m0</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="376" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="376" bodyend="385"/>
        <references refid="a01635_1aa64fee49965171d8b1977dbb310fa314" compoundref="a00908" startline="334" endline="338">copyMIntoDAt</references>
        <references refid="a01635_1a175bf06345174fcce65d1191e39a3003" compoundref="a00908" startline="48" endline="51">atAddressOf</references>
        <references refid="a01635_1a741754f2400fa7216c34d068f8f72cbd" compoundref="a00908" startline="179" endline="182">moveDIntoM</references>
        <references refid="a01635_1adac2df82286980d0157b3d7ca5f84db2" compoundref="a00908" startline="184" endline="187">moveAIntoD</references>
        <references refid="a01635_1ac4984684a04d2f0c08b8d3ccd914c3ee" compoundref="a00908" startline="222" endline="229">subMoveDmIntoD</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a8fe8623ebe79e65925e9be23d07750ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::copyMIntoD</definition>
        <argsstring>() const</argsstring>
        <name>copyMIntoD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="162" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="162" bodyend="165"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1aa64fee49965171d8b1977dbb310fa314" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::copyMIntoDAt</definition>
        <argsstring>(const int &amp;x0) const</argsstring>
        <name>copyMIntoDAt</name>
        <param>
          <type>const int &amp;</type>
          <declname>x0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="334" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="334" bodyend="338"/>
        <references refid="a01635_1a175bf06345174fcce65d1191e39a3003" compoundref="a00908" startline="48" endline="51">atAddressOf</references>
        <references refid="a01635_1a8fe8623ebe79e65925e9be23d07750ae" compoundref="a00908" startline="162" endline="165">copyMIntoD</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1ab437fc0874dd768e6cad8960e446f870" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::decrement</definition>
        <argsstring>() const</argsstring>
        <name>decrement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="121" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="121" bodyend="129"/>
        <references refid="a01635_1a175bf06345174fcce65d1191e39a3003" compoundref="a00908" startline="48" endline="51">atAddressOf</references>
        <references refid="a00923_1ab2a36ae607c4ab166da225c1f6f71827a863abda83f7c8925cceaf04098e3cb34" compoundref="a00905" startline="28">Hack::VirtualMachine::STP</references>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a63f901cea27d2aea7ce908221a7dcd29" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::decrementA</definition>
        <argsstring>() const</argsstring>
        <name>decrementA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="116" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="116" bodyend="119"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a85ac74c78a8b176ded04af2096eac85d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::dereferenceD</definition>
        <argsstring>() const</argsstring>
        <name>dereferenceD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="346" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="346" bodyend="349"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a7d7bda478808a8ce78af2a5f4e524840" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::dereferenceM</definition>
        <argsstring>() const</argsstring>
        <name>dereferenceM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="351" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="351" bodyend="354"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a59e701f5c538e3641f8605cf4b4b87a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::dereferenceOffset</definition>
        <argsstring>(int x0, size_t offs) const</argsstring>
        <name>dereferenceOffset</name>
        <param>
          <type>int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="137" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="137" bodyend="144"/>
        <references refid="a01635_1a175bf06345174fcce65d1191e39a3003" compoundref="a00908" startline="48" endline="51">atAddressOf</references>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1ae12a2b3735c9ad4c7ffcf06f4e8f235a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::increment</definition>
        <argsstring>() const</argsstring>
        <name>increment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="110" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="110" bodyend="114"/>
        <references refid="a01635_1a175bf06345174fcce65d1191e39a3003" compoundref="a00908" startline="48" endline="51">atAddressOf</references>
        <references refid="a00923_1ab2a36ae607c4ab166da225c1f6f71827a863abda83f7c8925cceaf04098e3cb34" compoundref="a00905" startline="28">Hack::VirtualMachine::STP</references>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a200c1f50e617de5b500ce368db456fbb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::incrementAndJump</definition>
        <argsstring>() const</argsstring>
        <name>incrementAndJump</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="131" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="131" bodyend="135"/>
        <references refid="a01635_1a175bf06345174fcce65d1191e39a3003" compoundref="a00908" startline="48" endline="51">atAddressOf</references>
        <references refid="a00923_1ab2a36ae607c4ab166da225c1f6f71827a863abda83f7c8925cceaf04098e3cb34" compoundref="a00905" startline="28">Hack::VirtualMachine::STP</references>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a909f708f9e837b0183f4dd47e3ee4cc1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::jumpIfEquals</definition>
        <argsstring>(const String &amp;label) const</argsstring>
        <name>jumpIfEquals</name>
        <param>
          <type>const <ref refid="a00915_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="322" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="322" bodyend="326"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
        <references refid="a01635_1a3d6772c8a20f7028ddd70a4da12cc520" compoundref="a00908" startline="73" endline="76">label</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a7742f807f5a50d04bf97199b2250f131" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::jumpIfGreater</definition>
        <argsstring>(const String &amp;label) const</argsstring>
        <name>jumpIfGreater</name>
        <param>
          <type>const <ref refid="a00915_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="304" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="304" bodyend="308"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
        <references refid="a01635_1a3d6772c8a20f7028ddd70a4da12cc520" compoundref="a00908" startline="73" endline="76">label</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a2936d187196df9f509153d44f3c50aef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::jumpIfLess</definition>
        <argsstring>(const String &amp;label) const</argsstring>
        <name>jumpIfLess</name>
        <param>
          <type>const <ref refid="a00915_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="316" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="316" bodyend="320"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
        <references refid="a01635_1a3d6772c8a20f7028ddd70a4da12cc520" compoundref="a00908" startline="73" endline="76">label</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a514fbe2de487f40838e2f2e06375321a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::jumpIfNotEquals</definition>
        <argsstring>(const String &amp;label) const</argsstring>
        <name>jumpIfNotEquals</name>
        <param>
          <type>const <ref refid="a00915_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="328" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="328" bodyend="332"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
        <references refid="a01635_1a3d6772c8a20f7028ddd70a4da12cc520" compoundref="a00908" startline="73" endline="76">label</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a1700f7a828c0dbe664195c31b8189f9e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::jumpStackTop</definition>
        <argsstring>() const</argsstring>
        <name>jumpStackTop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="298" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="298" bodyend="302"/>
        <references refid="a01635_1a175bf06345174fcce65d1191e39a3003" compoundref="a00908" startline="48" endline="51">atAddressOf</references>
        <references refid="a00923_1ab2a36ae607c4ab166da225c1f6f71827a863abda83f7c8925cceaf04098e3cb34" compoundref="a00905" startline="28">Hack::VirtualMachine::STP</references>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a173d6752019266017c924ba132da9730" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::jumpTo</definition>
        <argsstring>(const String &amp;label) const</argsstring>
        <name>jumpTo</name>
        <param>
          <type>const <ref refid="a00915_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="310" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="310" bodyend="314"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
        <references refid="a01635_1a3d6772c8a20f7028ddd70a4da12cc520" compoundref="a00908" startline="73" endline="76">label</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a12bef7f8bfeef851d75676553207b359" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::jumpToAddressIn</definition>
        <argsstring>(const int &amp;addr) const</argsstring>
        <name>jumpToAddressIn</name>
        <param>
          <type>const int &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="78" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="78" bodyend="82"/>
        <references refid="a01635_1a175bf06345174fcce65d1191e39a3003" compoundref="a00908" startline="48" endline="51">atAddressOf</references>
        <references refid="a01635_1a6ef1d51061fbaafddb4921180036a6fe" compoundref="a00908" startline="197" endline="200">moveMIntoA</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a3c5bdd06abb474311bd67e86f4235573" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::jumpToD</definition>
        <argsstring>() const</argsstring>
        <name>jumpToD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="356" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="356" bodyend="359"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a4fea9b6b37191464b43ba65b5a5e5685" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::jumpToRomAddress</definition>
        <argsstring>(const String &amp;addr) const</argsstring>
        <name>jumpToRomAddress</name>
        <param>
          <type>const <ref refid="a00915_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="84" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="84" bodyend="88"/>
        <references refid="a01635_1a175bf06345174fcce65d1191e39a3003" compoundref="a00908" startline="48" endline="51">atAddressOf</references>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a4c944c89ef4504f58de53ae2e338b539" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::jumpToRomAddress</definition>
        <argsstring>(const int &amp;addr) const</argsstring>
        <name>jumpToRomAddress</name>
        <param>
          <type>const int &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="90" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="90" bodyend="94"/>
        <references refid="a01635_1a175bf06345174fcce65d1191e39a3003" compoundref="a00908" startline="48" endline="51">atAddressOf</references>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a3d6772c8a20f7028ddd70a4da12cc520" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::label</definition>
        <argsstring>(const String &amp;str) const</argsstring>
        <name>label</name>
        <param>
          <type>const <ref refid="a00915_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="73" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="73" bodyend="76"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1aa1d9895c4a583e36a7b7767bce78384f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::move</definition>
        <argsstring>(const int x0, const int v) const</argsstring>
        <name>move</name>
        <param>
          <type>const int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="189" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="189" bodyend="195"/>
        <references refid="a01635_1a175bf06345174fcce65d1191e39a3003" compoundref="a00908" startline="48" endline="51">atAddressOf</references>
        <references refid="a01635_1adac2df82286980d0157b3d7ca5f84db2" compoundref="a00908" startline="184" endline="187">moveAIntoD</references>
        <references refid="a01635_1a741754f2400fa7216c34d068f8f72cbd" compoundref="a00908" startline="179" endline="182">moveDIntoM</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1adac2df82286980d0157b3d7ca5f84db2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::moveAIntoD</definition>
        <argsstring>() const</argsstring>
        <name>moveAIntoD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="184" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="184" bodyend="187"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a950931ca528a0c443d1bab872bab52c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::moveDIntoA</definition>
        <argsstring>() const</argsstring>
        <name>moveDIntoA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="202" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="202" bodyend="205"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a741754f2400fa7216c34d068f8f72cbd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::moveDIntoM</definition>
        <argsstring>() const</argsstring>
        <name>moveDIntoM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="179" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="179" bodyend="182"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a90a38165d26c1c452fdff88b0a83a928" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::moveDIntoX</definition>
        <argsstring>(const int x0) const</argsstring>
        <name>moveDIntoX</name>
        <param>
          <type>const int</type>
          <declname>x0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="167" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="167" bodyend="171"/>
        <references refid="a01635_1a175bf06345174fcce65d1191e39a3003" compoundref="a00908" startline="48" endline="51">atAddressOf</references>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1ac7ac353f3fa08b923724a4858cb4e2fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::moveDIntoX</definition>
        <argsstring>(const String &amp;x0) const</argsstring>
        <name>moveDIntoX</name>
        <param>
          <type>const <ref refid="a00915_1af578ea8fc214989b8ebeece788fa787d" kindref="member">String</ref> &amp;</type>
          <declname>x0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="173" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="173" bodyend="177"/>
        <references refid="a01635_1a175bf06345174fcce65d1191e39a3003" compoundref="a00908" startline="48" endline="51">atAddressOf</references>
        <references refid="a01635_1a741754f2400fa7216c34d068f8f72cbd" compoundref="a00908" startline="179" endline="182">moveDIntoM</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a6ef1d51061fbaafddb4921180036a6fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::moveMIntoA</definition>
        <argsstring>() const</argsstring>
        <name>moveMIntoA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="197" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="197" bodyend="200"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a6224864f8951a6763574738729682f4b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::moveMIntoD</definition>
        <argsstring>() const</argsstring>
        <name>moveMIntoD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="154" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="154" bodyend="160"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1ab03c98b791f59029938061bb68180ea7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::moveMIntoDAt</definition>
        <argsstring>(const int &amp;x0) const</argsstring>
        <name>moveMIntoDAt</name>
        <param>
          <type>const int &amp;</type>
          <declname>x0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="340" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="340" bodyend="344"/>
        <references refid="a01635_1a175bf06345174fcce65d1191e39a3003" compoundref="a00908" startline="48" endline="51">atAddressOf</references>
        <references refid="a01635_1a6224864f8951a6763574738729682f4b" compoundref="a00908" startline="154" endline="160">moveMIntoD</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1ab42de1bc627a17990d40b6871d4a2041" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::negMIntoM</definition>
        <argsstring>() const</argsstring>
        <name>negMIntoM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="246" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="246" bodyend="249"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a7b1173a77edb1d1791096d55dbee2ee4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::notMIntoM</definition>
        <argsstring>() const</argsstring>
        <name>notMIntoM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="241" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="241" bodyend="244"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1aefd34367173992dca2ece0c2166786c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::offsetTo</definition>
        <argsstring>(const int x0, const size_t offs) const</argsstring>
        <name>offsetTo</name>
        <param>
          <type>const int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>offs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="146" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="146" bodyend="152"/>
        <references refid="a01635_1a175bf06345174fcce65d1191e39a3003" compoundref="a00908" startline="48" endline="51">atAddressOf</references>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a191dcae54a330f670280a08629a5b6cc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::orDmIntoM</definition>
        <argsstring>() const</argsstring>
        <name>orDmIntoM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="236" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="236" bodyend="239"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1ada6099787eff578a9980ab4f38e27eb1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::popSegment</definition>
        <argsstring>(const int &amp;seg0, const size_t &amp;idx) const</argsstring>
        <name>popSegment</name>
        <param>
          <type>const int &amp;</type>
          <declname>seg0</declname>
        </param>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="361" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="361" bodyend="374"/>
        <references refid="a01635_1a59e701f5c538e3641f8605cf4b4b87a4" compoundref="a00908" startline="137" endline="144">dereferenceOffset</references>
        <references refid="a01635_1adac2df82286980d0157b3d7ca5f84db2" compoundref="a00908" startline="184" endline="187">moveAIntoD</references>
        <references refid="a01635_1a90a38165d26c1c452fdff88b0a83a928" compoundref="a00908" startline="167" endline="171">moveDIntoX</references>
        <references refid="a00923_1ab2a36ae607c4ab166da225c1f6f71827ac877118ac6aa475e26bcdc4dd5952f52" compoundref="a00905" startline="35">Hack::VirtualMachine::SW0</references>
        <references refid="a01635_1a1700f7a828c0dbe664195c31b8189f9e" compoundref="a00908" startline="298" endline="302">jumpStackTop</references>
        <references refid="a01635_1a6224864f8951a6763574738729682f4b" compoundref="a00908" startline="154" endline="160">moveMIntoD</references>
        <references refid="a01635_1a12bef7f8bfeef851d75676553207b359" compoundref="a00908" startline="78" endline="82">jumpToAddressIn</references>
        <references refid="a01635_1a741754f2400fa7216c34d068f8f72cbd" compoundref="a00908" startline="179" endline="182">moveDIntoM</references>
        <references refid="a01635_1ab437fc0874dd768e6cad8960e446f870" compoundref="a00908" startline="121" endline="129">decrement</references>
        <references refid="a01635_1aa1d9895c4a583e36a7b7767bce78384f" compoundref="a00908" startline="189" endline="195">move</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1aa362e930130af35f89144bcb3408b85f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::popStackFrame</definition>
        <argsstring>(const int &amp;frame, const int &amp;x0, const int &amp;idx) const</argsstring>
        <name>popStackFrame</name>
        <param>
          <type>const int &amp;</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="64" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="64" bodyend="71"/>
        <references refid="a01635_1aa64fee49965171d8b1977dbb310fa314" compoundref="a00908" startline="334" endline="338">copyMIntoDAt</references>
        <references refid="a01635_1a8e21be8722f05faaf98bf330cc90cdb3" compoundref="a00908" startline="262" endline="266">subXFromD</references>
        <references refid="a01635_1a85ac74c78a8b176ded04af2096eac85d" compoundref="a00908" startline="346" endline="349">dereferenceD</references>
        <references refid="a01635_1a6224864f8951a6763574738729682f4b" compoundref="a00908" startline="154" endline="160">moveMIntoD</references>
        <references refid="a01635_1a90a38165d26c1c452fdff88b0a83a928" compoundref="a00908" startline="167" endline="171">moveDIntoX</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a34acb94db32ce9546ba3b32e11043fd4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::push</definition>
        <argsstring>(const int v) const</argsstring>
        <name>push</name>
        <param>
          <type>const int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="268" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="268" bodyend="274"/>
        <references refid="a01635_1a175bf06345174fcce65d1191e39a3003" compoundref="a00908" startline="48" endline="51">atAddressOf</references>
        <references refid="a01635_1adac2df82286980d0157b3d7ca5f84db2" compoundref="a00908" startline="184" endline="187">moveAIntoD</references>
        <references refid="a01635_1ae12a2b3735c9ad4c7ffcf06f4e8f235a" compoundref="a00908" startline="110" endline="114">increment</references>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1aa312694a897020b8a667fc0140a7de43" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::pushD</definition>
        <argsstring>() const</argsstring>
        <name>pushD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="276" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="276" bodyend="280"/>
        <references refid="a01635_1ae12a2b3735c9ad4c7ffcf06f4e8f235a" compoundref="a00908" startline="110" endline="114">increment</references>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1ae92290ff5aa525f4872f52c11ecfba2f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::setD</definition>
        <argsstring>(const bool val) const</argsstring>
        <name>setD</name>
        <param>
          <type>const bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="290" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="290" bodyend="296"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1ad8f38975cc515f0db92975ffb113d023" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::setM</definition>
        <argsstring>(const bool val) const</argsstring>
        <name>setM</name>
        <param>
          <type>const bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="282" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="282" bodyend="288"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a77ac380a3651c409a3c5d9cfa595f44a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::subDmIntoD</definition>
        <argsstring>() const</argsstring>
        <name>subDmIntoD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="217" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="217" bodyend="220"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1abede0a565d50c119dde2f3c1176da963" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::subMdIntoD</definition>
        <argsstring>() const</argsstring>
        <name>subMdIntoD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="251" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="251" bodyend="254"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a881189b74424125c63a8424483775ae3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::subMdIntoM</definition>
        <argsstring>() const</argsstring>
        <name>subMdIntoM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="212" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="212" bodyend="215"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1ac4984684a04d2f0c08b8d3ccd914c3ee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::subMoveDmIntoD</definition>
        <argsstring>() const</argsstring>
        <name>subMoveDmIntoD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="222" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="222" bodyend="229"/>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a8e21be8722f05faaf98bf330cc90cdb3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::subXFromD</definition>
        <argsstring>(const int &amp;x0) const</argsstring>
        <name>subXFromD</name>
        <param>
          <type>const int &amp;</type>
          <declname>x0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="262" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="262" bodyend="266"/>
        <references refid="a01635_1a175bf06345174fcce65d1191e39a3003" compoundref="a00908" startline="48" endline="51">atAddressOf</references>
        <references refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" compoundref="a00908" startline="41" endline="46">write</references>
      </memberdef>
      <memberdef kind="function" id="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Hack::VirtualMachine::CodeStream::write</definition>
        <argsstring>(Args &amp;&amp;...args) const</argsstring>
        <name>write</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/VirtualMachine/Emitter.cpp" line="41" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="41" bodyend="46"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Source/VirtualMachine/Emitter.cpp" line="30" column="1" bodyfile="Source/VirtualMachine/Emitter.cpp" bodystart="29" bodyend="386"/>
    <listofallmembers>
      <member refid="a01635_1a1afcfad78f2ac802e729892b1eab1de2" prot="private" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>_s</name></member>
      <member refid="a01635_1af986393f5cbff6ce44748f241c15c63b" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>addDmIntoM</name></member>
      <member refid="a01635_1a7b3485d5bcdb0077f04a795300192aa1" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>addXToD</name></member>
      <member refid="a01635_1a55d42e45337699cea476f3d217d8839b" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>andDmIntoM</name></member>
      <member refid="a01635_1a175bf06345174fcce65d1191e39a3003" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>atAddressOf</name></member>
      <member refid="a01635_1ae5c74307522637dee6db8ae48f8d2a6d" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>atAddressOf</name></member>
      <member refid="a01635_1a96425b2e3bba2e053c15308f32ed124a" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>atDeReferencedAddressOf</name></member>
      <member refid="a01635_1a2a0387fffb31479984146dca5fa6e7df" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>CodeStream</name></member>
      <member refid="a01635_1abbbfef8a14e762f28b7b2be672a4e658" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>compareDIntoX</name></member>
      <member refid="a01635_1a8fe8623ebe79e65925e9be23d07750ae" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>copyMIntoD</name></member>
      <member refid="a01635_1aa64fee49965171d8b1977dbb310fa314" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>copyMIntoDAt</name></member>
      <member refid="a01635_1ab437fc0874dd768e6cad8960e446f870" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>decrement</name></member>
      <member refid="a01635_1a63f901cea27d2aea7ce908221a7dcd29" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>decrementA</name></member>
      <member refid="a01635_1a85ac74c78a8b176ded04af2096eac85d" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>dereferenceD</name></member>
      <member refid="a01635_1a7d7bda478808a8ce78af2a5f4e524840" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>dereferenceM</name></member>
      <member refid="a01635_1a59e701f5c538e3641f8605cf4b4b87a4" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>dereferenceOffset</name></member>
      <member refid="a01635_1ae12a2b3735c9ad4c7ffcf06f4e8f235a" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>increment</name></member>
      <member refid="a01635_1a200c1f50e617de5b500ce368db456fbb" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>incrementAndJump</name></member>
      <member refid="a01635_1a909f708f9e837b0183f4dd47e3ee4cc1" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>jumpIfEquals</name></member>
      <member refid="a01635_1a7742f807f5a50d04bf97199b2250f131" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>jumpIfGreater</name></member>
      <member refid="a01635_1a2936d187196df9f509153d44f3c50aef" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>jumpIfLess</name></member>
      <member refid="a01635_1a514fbe2de487f40838e2f2e06375321a" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>jumpIfNotEquals</name></member>
      <member refid="a01635_1a1700f7a828c0dbe664195c31b8189f9e" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>jumpStackTop</name></member>
      <member refid="a01635_1a173d6752019266017c924ba132da9730" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>jumpTo</name></member>
      <member refid="a01635_1a12bef7f8bfeef851d75676553207b359" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>jumpToAddressIn</name></member>
      <member refid="a01635_1a3c5bdd06abb474311bd67e86f4235573" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>jumpToD</name></member>
      <member refid="a01635_1a4fea9b6b37191464b43ba65b5a5e5685" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>jumpToRomAddress</name></member>
      <member refid="a01635_1a4c944c89ef4504f58de53ae2e338b539" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>jumpToRomAddress</name></member>
      <member refid="a01635_1a3d6772c8a20f7028ddd70a4da12cc520" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>label</name></member>
      <member refid="a01635_1aa1d9895c4a583e36a7b7767bce78384f" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>move</name></member>
      <member refid="a01635_1adac2df82286980d0157b3d7ca5f84db2" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>moveAIntoD</name></member>
      <member refid="a01635_1a950931ca528a0c443d1bab872bab52c3" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>moveDIntoA</name></member>
      <member refid="a01635_1a741754f2400fa7216c34d068f8f72cbd" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>moveDIntoM</name></member>
      <member refid="a01635_1a90a38165d26c1c452fdff88b0a83a928" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>moveDIntoX</name></member>
      <member refid="a01635_1ac7ac353f3fa08b923724a4858cb4e2fa" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>moveDIntoX</name></member>
      <member refid="a01635_1a6ef1d51061fbaafddb4921180036a6fe" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>moveMIntoA</name></member>
      <member refid="a01635_1a6224864f8951a6763574738729682f4b" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>moveMIntoD</name></member>
      <member refid="a01635_1ab03c98b791f59029938061bb68180ea7" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>moveMIntoDAt</name></member>
      <member refid="a01635_1ab42de1bc627a17990d40b6871d4a2041" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>negMIntoM</name></member>
      <member refid="a01635_1a7b1173a77edb1d1791096d55dbee2ee4" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>notMIntoM</name></member>
      <member refid="a01635_1aefd34367173992dca2ece0c2166786c4" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>offsetTo</name></member>
      <member refid="a01635_1a191dcae54a330f670280a08629a5b6cc" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>orDmIntoM</name></member>
      <member refid="a01635_1ada6099787eff578a9980ab4f38e27eb1" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>popSegment</name></member>
      <member refid="a01635_1aa362e930130af35f89144bcb3408b85f" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>popStackFrame</name></member>
      <member refid="a01635_1a34acb94db32ce9546ba3b32e11043fd4" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>push</name></member>
      <member refid="a01635_1aa312694a897020b8a667fc0140a7de43" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>pushD</name></member>
      <member refid="a01635_1ae92290ff5aa525f4872f52c11ecfba2f" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>setD</name></member>
      <member refid="a01635_1ad8f38975cc515f0db92975ffb113d023" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>setM</name></member>
      <member refid="a01635_1a77ac380a3651c409a3c5d9cfa595f44a" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>subDmIntoD</name></member>
      <member refid="a01635_1abede0a565d50c119dde2f3c1176da963" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>subMdIntoD</name></member>
      <member refid="a01635_1a881189b74424125c63a8424483775ae3" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>subMdIntoM</name></member>
      <member refid="a01635_1ac4984684a04d2f0c08b8d3ccd914c3ee" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>subMoveDmIntoD</name></member>
      <member refid="a01635_1a8e21be8722f05faaf98bf330cc90cdb3" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>subXFromD</name></member>
      <member refid="a01635_1a5a6c6aa70bf459a3ab1ac0e3c3f5e309" prot="public" virt="non-virtual"><scope>Hack::VirtualMachine::CodeStream</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
