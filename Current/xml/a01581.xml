<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="a01581" kind="page">
    <compoundname>Hc05</compoundname>
    <title>Compiler</title>
    <briefdescription>
<para>Implements the compiler for the .jack source file. </para>    </briefdescription>
    <detaileddescription>
<para>Implements the compiler for the .jack source file.</para><para><linebreak/>
<linebreak/>
The primary job of the compiler is to take the high-level jack language and translate it from, <computeroutput>.jack,</computeroutput> to <computeroutput>.vm,</computeroutput> then <computeroutput>.asm,</computeroutput> and finally to machine code.</para><sect1 id="a01581_1Hc05SyntaxAnalyzer">
<title>SyntaxAnalyzer</title>
<para>The SyntaxAnalyzer project provides a static library that compiles the jack code into an intermediate parse tree. <linebreak/>
<linebreak/>
The definition for the jack grammar can be found <ulink url="../../Source/Compiler/Analyzer/Jack.grm">here.</ulink> Where the primary difference in syntax between this implementation and the course is that the not operator <computeroutput>!</computeroutput> is implemented both as &apos;~&apos; and &apos;!&apos;.</para></sect1>
<sect1 id="a01581_1Hc05CompileUtils">
<title>CompileUtils</title>
<para>Provides an intermediate static library that implements the parse tree structure. The parse tree structure is meant to be shared between multiple projects.</para><para>It also contains extra general classes that provide output formats for the parse tree.</para></sect1>
<sect1 id="a01581_1Hc05Jack2XML">
<title>Jack2XML</title>
<para>Is an executable project that provides the means to output inspection files.</para><para><linebreak/>
<linebreak/>
 <programlisting filename=".txt"><codeline><highlight class="normal">Usage:<sp/>Jack2xml<sp/>&lt;options&gt;<sp/>&lt;arg[0]<sp/>..<sp/>arg[n]&gt;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-h,<sp/>--help<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Display<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>help<sp/>message</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-f,<sp/>--format<sp/><sp/><sp/><sp/><sp/>Specify<sp/>an<sp/>output<sp/>file<sp/>format</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>xml,<sp/>format<sp/>as<sp/>XML<sp/>(</highlight><highlight class="keywordflow">default</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>dot,<sp/>format<sp/>as<sp/>DOT</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-d,<sp/>--directory<sp/><sp/>Converts<sp/>all<sp/>.jack<sp/>files<sp/>in<sp/>the<sp/>current<sp/>directory<sp/>to<sp/>.xml</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-o,<sp/>--output<sp/><sp/><sp/><sp/><sp/>Specify<sp/>an<sp/>output<sp/>file</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>the<sp/>directory<sp/>option<sp/>takes<sp/>precedence</highlight></codeline>
</programlisting></para><sect2 id="a01581_1Hc05Jack2XML_0">
<title>Example</title>
<para><linebreak/>
<emphasis>Input:</emphasis> The following shows the output of Jack2XML using the supplied <computeroutput>.jack</computeroutput> source file.<linebreak/>
<linebreak/>
<programlisting filename=".txt"><codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">Main</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><linebreak/>
<emphasis>Xml:</emphasis> Shows the output using <ref refid="a01182" kindref="compound">Hack::Compiler::XmlWriterImpl</ref><linebreak/>
<linebreak/>
<programlisting filename=".xml"><codeline><highlight class="normal">&lt;?</highlight><highlight class="keyword">xml</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">version</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&apos;1.0&apos;</highlight><highlight class="normal">?&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;</highlight><highlight class="keywordtype">ClassList</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">Filename</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;example.jack&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">RuleClass</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Keyword</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">Keyword</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Identifier</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">Main</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">Identifier</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;{&lt;/</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleClassDescription</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleMethod</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleMethodSpecification</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Keyword</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">function</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">Keyword</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleMethodSpecification</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleMethodReturnType</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleDataType</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Keyword</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">int</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">Keyword</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleDataType</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleMethodReturnType</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Identifier</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">main</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">Identifier</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;(&lt;/</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleParameterList</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleParameterList</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;)&lt;/</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleMethodBody</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;{&lt;/</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleBody</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleStatement</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleReturnStatement</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Keyword</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">return</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">Keyword</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleExpression</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleSingleExpression</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">Subtype</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;SubtypeTerm&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleTerm</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RuleSimpleTerm</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Identifier</highlight><highlight class="normal">&gt;0&lt;/</highlight><highlight class="keywordtype">Identifier</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleSimpleTerm</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleTerm</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleSingleExpression</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleExpression</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;;&lt;/</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleReturnStatement</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleStatement</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleBody</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;}&lt;/</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleMethodBody</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleMethod</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">RuleClassDescription</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;}&lt;/</highlight><highlight class="keywordtype">Symbol</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/>&lt;/</highlight><highlight class="keywordtype">RuleClass</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">ClassList</highlight><highlight class="normal">&gt;</highlight></codeline>
</programlisting></para><para><linebreak/>
<emphasis>dot:</emphasis> Shows the output using <ref refid="a01162" kindref="compound">Hack::Compiler::DotWriterImpl</ref> after it has be converted to SVG with dot.<linebreak/>
<linebreak/>
<image type="html" name="Example.svg"></image>
</para></sect2>
</sect1>
<sect1 id="a01581_1Hc05CodeGenerator">
<title>CodeGenerator</title>
<para>Is a static library which implements the conversion from parse tree to <computeroutput>.vm</computeroutput>.</para></sect1>
<sect1 id="a01581_1Hc05compiler">
<title>Compiler</title>
<para>The current state of this project does not implement a standalone compiler. Instead, compilation happens in the <ref refid="a01583" kindref="compound">Computer</ref> executable.</para></sect1>
<sect1 id="a01581_1Hc05Defined">
<title>Defined in</title>
<para>The source is defined in <ulink url="../../Source/Compiler">Source/Compiler</ulink><linebreak/>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
