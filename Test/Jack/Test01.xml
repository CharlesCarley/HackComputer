<?xml version='1.0'?>
<ClassList>
 <RuleClass>
   <Keyword> class </Keyword>
   <Identifier> A </Identifier>
   <Symbol> { </Symbol>
   <RuleClassDescription>
     <RuleField>
       <RuleFieldSpecification>
         <Keyword> field </Keyword>
       </RuleFieldSpecification>
       <RuleDataType>
         <Keyword> int </Keyword>
       </RuleDataType>
       <RuleIdentifierList>
         <Identifier> x </Identifier>
         <Identifier> y </Identifier>
         <Identifier> z </Identifier>
       </RuleIdentifierList>
       <Symbol> ; </Symbol>
     </RuleField>
     <RuleMethod>
       <RuleMethodSpecification>
         <Keyword> constructor </Keyword>
       </RuleMethodSpecification>
       <RuleMethodReturnType>
         <Keyword> void </Keyword>
       </RuleMethodReturnType>
       <Identifier> A </Identifier>
       <Symbol> ( </Symbol>
       <RuleParameterList>
       </RuleParameterList>
       <Symbol> ) </Symbol>
       <RuleMethodBody>
         <Symbol> { </Symbol>
         <RuleBody>
           <RuleStatement>
             <RuleLetStatement Subtype="SubtypeLetEqual">
               <Keyword> let </Keyword>
               <Identifier> x </Identifier>
               <Symbol> = </Symbol>
               <RuleExpression>
                 <RuleSingleExpression Subtype="SubtypeTerm">
                   <RuleTerm>
                     <RuleSimpleTerm>
                       <Identifier> 3 </Identifier>
                     </RuleSimpleTerm>
                   </RuleTerm>
                 </RuleSingleExpression>
               </RuleExpression>
               <Symbol> ; </Symbol>
             </RuleLetStatement>
           </RuleStatement>
           <RuleStatement>
             <RuleDoStatement>
               <Keyword> do </Keyword>
               <RuleCallMethod Subtype="SubtypeCallMethod">
                 <Identifier> Output </Identifier>
                 <Symbol> . </Symbol>
                 <Identifier> Write </Identifier>
                 <Symbol> ( </Symbol>
                 <RuleExpressionList>
                   <RuleExpression>
                     <RuleSingleExpression Subtype="SubtypeTerm">
                       <RuleTerm>
                         <RuleSimpleTerm>
                           <Identifier> 1 </Identifier>
                         </RuleSimpleTerm>
                       </RuleTerm>
                     </RuleSingleExpression>
                     <RuleSingleExpression Subtype="SubtypeOpTerm">
                       <RuleOperator>
                         <Symbol> + </Symbol>
                       </RuleOperator>
                       <RuleTerm>
                         <RuleSimpleTerm>
                           <Identifier> 1 </Identifier>
                         </RuleSimpleTerm>
                       </RuleTerm>
                     </RuleSingleExpression>
                   </RuleExpression>
                   <RuleExpression>
                     <RuleSingleExpression Subtype="SubtypeTerm">
                       <RuleTerm>
                         <RuleSimpleTerm>
                           <Identifier> 2 </Identifier>
                         </RuleSimpleTerm>
                       </RuleTerm>
                     </RuleSingleExpression>
                     <RuleSingleExpression Subtype="SubtypeOpTerm">
                       <RuleOperator>
                         <Symbol> + </Symbol>
                       </RuleOperator>
                       <RuleTerm>
                         <RuleSimpleTerm>
                           <Identifier> 2 </Identifier>
                         </RuleSimpleTerm>
                       </RuleTerm>
                     </RuleSingleExpression>
                   </RuleExpression>
                   <RuleExpression>
                     <RuleSingleExpression Subtype="SubtypeTerm">
                       <RuleTerm>
                         <RuleSimpleTerm>
                           <Identifier> 3 </Identifier>
                         </RuleSimpleTerm>
                       </RuleTerm>
                     </RuleSingleExpression>
                     <RuleSingleExpression Subtype="SubtypeOpTerm">
                       <RuleOperator>
                         <Symbol> + </Symbol>
                       </RuleOperator>
                       <RuleTerm>
                         <RuleSimpleTerm>
                           <Identifier> 3 </Identifier>
                         </RuleSimpleTerm>
                       </RuleTerm>
                     </RuleSingleExpression>
                   </RuleExpression>
                   <RuleExpression>
                     <RuleSingleExpression Subtype="SubtypeTerm">
                       <RuleTerm>
                         <RuleSimpleTerm>
                           <Identifier> 4 </Identifier>
                         </RuleSimpleTerm>
                       </RuleTerm>
                     </RuleSingleExpression>
                     <RuleSingleExpression Subtype="SubtypeOpTerm">
                       <RuleOperator>
                         <Symbol> + </Symbol>
                       </RuleOperator>
                       <RuleTerm>
                         <RuleSimpleTerm>
                           <Identifier> 5 </Identifier>
                         </RuleSimpleTerm>
                       </RuleTerm>
                     </RuleSingleExpression>
                   </RuleExpression>
                 </RuleExpressionList>
                 <Symbol> ) </Symbol>
               </RuleCallMethod>
               <Symbol> ; </Symbol>
             </RuleDoStatement>
           </RuleStatement>
         </RuleBody>
         <Symbol> } </Symbol>
       </RuleMethodBody>
     </RuleMethod>
     <RuleMethod>
       <RuleMethodSpecification>
         <Keyword> function </Keyword>
       </RuleMethodSpecification>
       <RuleMethodReturnType>
         <RuleDataType>
           <Keyword> int </Keyword>
         </RuleDataType>
       </RuleMethodReturnType>
       <Identifier> IncA </Identifier>
       <Symbol> ( </Symbol>
       <RuleParameterList>
         <RuleParameter>
           <RuleDataType>
             <Keyword> int </Keyword>
           </RuleDataType>
           <Identifier> a </Identifier>
         </RuleParameter>
       </RuleParameterList>
       <Symbol> ) </Symbol>
       <RuleMethodBody>
         <Symbol> { </Symbol>
         <RuleBody>
           <RuleStatement>
             <RuleReturnStatement>
               <Keyword> return </Keyword>
               <RuleExpression>
                 <RuleSingleExpression Subtype="SubtypeTerm">
                   <RuleTerm>
                     <RuleSimpleTerm>
                       <Identifier> x </Identifier>
                     </RuleSimpleTerm>
                   </RuleTerm>
                 </RuleSingleExpression>
                 <RuleSingleExpression Subtype="SubtypeOpTerm">
                   <RuleOperator>
                     <Symbol> + </Symbol>
                   </RuleOperator>
                   <RuleTerm>
                     <RuleSimpleTerm>
                       <Identifier> a </Identifier>
                     </RuleSimpleTerm>
                   </RuleTerm>
                 </RuleSingleExpression>
               </RuleExpression>
               <Symbol> ; </Symbol>
             </RuleReturnStatement>
           </RuleStatement>
         </RuleBody>
         <Symbol> } </Symbol>
       </RuleMethodBody>
     </RuleMethod>
     <RuleMethod>
       <RuleMethodSpecification>
         <Keyword> method </Keyword>
       </RuleMethodSpecification>
       <RuleMethodReturnType>
         <Keyword> void </Keyword>
       </RuleMethodReturnType>
       <Identifier> SomeMethod </Identifier>
       <Symbol> ( </Symbol>
       <RuleParameterList>
       </RuleParameterList>
       <Symbol> ) </Symbol>
       <RuleMethodBody>
         <Symbol> { </Symbol>
         <RuleBody>
           <RuleVariable>
             <Keyword> var </Keyword>
             <RuleDataType>
               <Keyword> int </Keyword>
             </RuleDataType>
             <RuleIdentifierList>
               <Identifier> a </Identifier>
             </RuleIdentifierList>
             <Symbol> ; </Symbol>
           </RuleVariable>
           <RuleStatement>
             <RuleLetStatement Subtype="SubtypeLetEqual">
               <Keyword> let </Keyword>
               <Identifier> a </Identifier>
               <Symbol> = </Symbol>
               <RuleExpression>
                 <RuleSingleExpression Subtype="SubtypeTerm">
                   <RuleTerm>
                     <RuleSimpleTerm>
                       <Identifier> 0 </Identifier>
                     </RuleSimpleTerm>
                   </RuleTerm>
                 </RuleSingleExpression>
               </RuleExpression>
               <Symbol> ; </Symbol>
             </RuleLetStatement>
           </RuleStatement>
           <RuleStatement>
             <RuleWhileStatement>
               <Keyword> while </Keyword>
               <Symbol> ( </Symbol>
               <RuleExpression>
                 <RuleSingleExpression Subtype="SubtypeTerm">
                   <RuleTerm>
                     <RuleSimpleTerm>
                       <Identifier> a </Identifier>
                     </RuleSimpleTerm>
                   </RuleTerm>
                 </RuleSingleExpression>
                 <RuleSingleExpression Subtype="SubtypeOpTerm">
                   <RuleOperator>
                     <Symbol> &lt; </Symbol>
                   </RuleOperator>
                   <RuleTerm>
                     <RuleSimpleTerm>
                       <Identifier> 25 </Identifier>
                     </RuleSimpleTerm>
                   </RuleTerm>
                 </RuleSingleExpression>
               </RuleExpression>
               <Symbol> ) </Symbol>
               <Symbol> { </Symbol>
               <RuleStatementList>
                 <RuleStatement>
                   <RuleLetStatement Subtype="SubtypeLetEqual">
                     <Keyword> let </Keyword>
                     <Identifier> a </Identifier>
                     <Symbol> = </Symbol>
                     <RuleExpression>
                       <RuleSingleExpression Subtype="SubtypeTerm">
                         <RuleTerm>
                           <RuleSimpleTerm>
                             <Identifier> 5 </Identifier>
                           </RuleSimpleTerm>
                         </RuleTerm>
                       </RuleSingleExpression>
                     </RuleExpression>
                     <Symbol> ; </Symbol>
                   </RuleLetStatement>
                 </RuleStatement>
                 <RuleStatement>
                   <RuleIfStatement Subtype="SubtypeIfElseCombo">
                     <Keyword> if </Keyword>
                     <Symbol> ( </Symbol>
                     <RuleExpression>
                       <RuleSingleExpression Subtype="SubtypeTerm">
                         <RuleTerm>
                           <RuleSimpleTerm>
                             <Identifier> a </Identifier>
                           </RuleSimpleTerm>
                         </RuleTerm>
                       </RuleSingleExpression>
                       <RuleSingleExpression Subtype="SubtypeOpTerm">
                         <RuleOperator>
                           <Symbol> &gt; </Symbol>
                         </RuleOperator>
                         <RuleTerm>
                           <RuleSimpleTerm>
                             <Identifier> 25 </Identifier>
                           </RuleSimpleTerm>
                         </RuleTerm>
                       </RuleSingleExpression>
                       <RuleSingleExpression Subtype="SubtypeOpTerm">
                         <RuleOperator>
                           <Symbol> &amp; </Symbol>
                         </RuleOperator>
                         <RuleTerm>
                           <RuleSimpleTerm>
                             <Identifier> 3 </Identifier>
                           </RuleSimpleTerm>
                         </RuleTerm>
                       </RuleSingleExpression>
                     </RuleExpression>
                     <Symbol> ) </Symbol>
                     <Symbol> { </Symbol>
                     <RuleStatementList>
                       <RuleStatement>
                         <RuleDoStatement>
                           <Keyword> do </Keyword>
                           <RuleCallMethod Subtype="SubtypeCallMethod">
                             <Identifier> Output </Identifier>
                             <Symbol> . </Symbol>
                             <Identifier> Write </Identifier>
                             <Symbol> ( </Symbol>
                             <RuleExpressionList>
                               <RuleExpression>
                                 <RuleSingleExpression Subtype="SubtypeTerm">
                                   <RuleTerm>
                                     <RuleSimpleTerm>
                                       <Identifier> Done </Identifier>
                                     </RuleSimpleTerm>
                                   </RuleTerm>
                                 </RuleSingleExpression>
                               </RuleExpression>
                             </RuleExpressionList>
                             <Symbol> ) </Symbol>
                           </RuleCallMethod>
                           <Symbol> ; </Symbol>
                         </RuleDoStatement>
                       </RuleStatement>
                     </RuleStatementList>
                     <Symbol> } </Symbol>
                   </RuleIfStatement>
                 </RuleStatement>
                 <RuleStatement>
                   <RuleElseStatement>
                     <Keyword> else </Keyword>
                     <Symbol> { </Symbol>
                     <RuleStatementList>
                       <RuleStatement>
                         <RuleDoStatement>
                           <Keyword> do </Keyword>
                           <RuleCallMethod Subtype="SubtypeCallMethod">
                             <Identifier> Output </Identifier>
                             <Symbol> . </Symbol>
                             <Identifier> Write </Identifier>
                             <Symbol> ( </Symbol>
                             <RuleExpressionList>
                               <RuleExpression>
                                 <RuleSingleExpression Subtype="SubtypeTerm">
                                   <RuleTerm>
                                     <RuleSimpleTerm>
                                       <Identifier> Not Done </Identifier>
                                     </RuleSimpleTerm>
                                   </RuleTerm>
                                 </RuleSingleExpression>
                               </RuleExpression>
                             </RuleExpressionList>
                             <Symbol> ) </Symbol>
                           </RuleCallMethod>
                           <Symbol> ; </Symbol>
                         </RuleDoStatement>
                       </RuleStatement>
                     </RuleStatementList>
                     <Symbol> } </Symbol>
                   </RuleElseStatement>
                 </RuleStatement>
                 <RuleStatement>
                   <RuleLetStatement Subtype="SubtypeLetEqual">
                     <Keyword> let </Keyword>
                     <Identifier> a </Identifier>
                     <Symbol> = </Symbol>
                     <RuleExpression>
                       <RuleSingleExpression Subtype="SubtypeTerm">
                         <RuleTerm>
                           <RuleSimpleTerm>
                             <Identifier> a </Identifier>
                           </RuleSimpleTerm>
                         </RuleTerm>
                       </RuleSingleExpression>
                       <RuleSingleExpression Subtype="SubtypeOpTerm">
                         <RuleOperator>
                           <Symbol> + </Symbol>
                         </RuleOperator>
                         <RuleTerm>
                           <RuleSimpleTerm>
                             <Identifier> 1 </Identifier>
                           </RuleSimpleTerm>
                         </RuleTerm>
                       </RuleSingleExpression>
                     </RuleExpression>
                     <Symbol> ; </Symbol>
                   </RuleLetStatement>
                 </RuleStatement>
               </RuleStatementList>
               <Symbol> } </Symbol>
             </RuleWhileStatement>
           </RuleStatement>
           <RuleStatement>
             <RuleReturnStatement>
               <Keyword> return </Keyword>
               <RuleExpression>
                 <RuleSingleExpression Subtype="SubtypeTerm">
                   <RuleTerm>
                     <RuleSimpleTerm>
                       <Identifier> a </Identifier>
                     </RuleSimpleTerm>
                   </RuleTerm>
                 </RuleSingleExpression>
                 <RuleSingleExpression Subtype="SubtypeOpTerm">
                   <RuleOperator>
                     <Symbol> / </Symbol>
                   </RuleOperator>
                   <RuleTerm>
                     <RuleSimpleTerm>
                       <Identifier> 5 </Identifier>
                     </RuleSimpleTerm>
                   </RuleTerm>
                 </RuleSingleExpression>
               </RuleExpression>
               <Symbol> ; </Symbol>
             </RuleReturnStatement>
           </RuleStatement>
         </RuleBody>
         <Symbol> } </Symbol>
       </RuleMethodBody>
     </RuleMethod>
   </RuleClassDescription>
   <Symbol> } </Symbol>
 </RuleClass>
</ClassList>
