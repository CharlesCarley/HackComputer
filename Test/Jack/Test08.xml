<?xml version='1.0'?>
<ClassList>
 <RuleClass>
   <Keyword> class </Keyword>
   <Identifier> MethodBody </Identifier>
   <Symbol> { </Symbol>
   <RuleClassDescription>
     <RuleMethod>
       <RuleMethodSpecification>
         <Keyword> method </Keyword>
       </RuleMethodSpecification>
       <RuleMethodReturnType>
         <RuleDataType>
           <Identifier> boolean </Identifier>
         </RuleDataType>
       </RuleMethodReturnType>
       <Identifier> Body </Identifier>
       <Symbol> ( </Symbol>
       <RuleParameterList>
       </RuleParameterList>
       <Symbol> ) </Symbol>
       <RuleMethodBody>
         <Symbol> { </Symbol>
         <RuleBody>
           <RuleStatement>
             <RuleLetStatement Subtype="SubtypeLetEqual">
               <Keyword> let </Keyword>
               <Identifier> v0 </Identifier>
               <Symbol> = </Symbol>
               <RuleExpression>
                 <RuleSingleExpression Subtype="SubtypeTerm">
                   <RuleTerm>
                     <RuleSimpleTerm>
                       <Identifier> 1 </Identifier>
                     </RuleSimpleTerm>
                   </RuleTerm>
                 </RuleSingleExpression>
               </RuleExpression>
               <Symbol> ; </Symbol>
             </RuleLetStatement>
           </RuleStatement>
           <RuleStatement>
             <RuleLetStatement Subtype="SubtypeLetEqual">
               <Keyword> let </Keyword>
               <Identifier> v0 </Identifier>
               <Symbol> = </Symbol>
               <RuleExpression>
                 <RuleSingleExpression Subtype="SubtypeTerm">
                   <RuleTerm>
                     <RuleSimpleTerm>
                       <Identifier> v0 </Identifier>
                     </RuleSimpleTerm>
                   </RuleTerm>
                 </RuleSingleExpression>
                 <RuleSingleExpression Subtype="SubtypeOpTerm">
                   <RuleOperator>
                     <Symbol> &gt; </Symbol>
                   </RuleOperator>
                   <RuleTerm>
                     <RuleSimpleTerm>
                       <Identifier> 2 </Identifier>
                     </RuleSimpleTerm>
                   </RuleTerm>
                 </RuleSingleExpression>
               </RuleExpression>
               <Symbol> ; </Symbol>
             </RuleLetStatement>
           </RuleStatement>
           <RuleStatement>
             <RuleLetStatement Subtype="SubtypeLetEqual">
               <Keyword> let </Keyword>
               <Identifier> v0 </Identifier>
               <Symbol> = </Symbol>
               <RuleExpression>
                 <RuleSingleExpression Subtype="SubtypeTerm">
                   <RuleTerm>
                     <RuleSimpleTerm>
                       <Identifier> v0 </Identifier>
                     </RuleSimpleTerm>
                   </RuleTerm>
                 </RuleSingleExpression>
                 <RuleSingleExpression Subtype="SubtypeOpTerm">
                   <RuleOperator>
                     <Symbol> &lt; </Symbol>
                   </RuleOperator>
                   <RuleTerm>
                     <RuleSimpleTerm>
                       <Identifier> 2 </Identifier>
                     </RuleSimpleTerm>
                   </RuleTerm>
                 </RuleSingleExpression>
               </RuleExpression>
               <Symbol> ; </Symbol>
             </RuleLetStatement>
           </RuleStatement>
           <RuleStatement>
             <RuleLetStatement Subtype="SubtypeLetEqual">
               <Keyword> let </Keyword>
               <Identifier> v0 </Identifier>
               <Symbol> = </Symbol>
               <RuleExpression>
                 <RuleSingleExpression Subtype="SubtypeTerm">
                   <RuleTerm>
                     <RuleSimpleTerm>
                       <Identifier> v0 </Identifier>
                     </RuleSimpleTerm>
                   </RuleTerm>
                 </RuleSingleExpression>
                 <RuleSingleExpression Subtype="SubtypeOpTerm">
                   <RuleOperator>
                     <Symbol> = </Symbol>
                   </RuleOperator>
                   <RuleTerm>
                     <RuleSimpleTerm>
                       <Identifier> 2 </Identifier>
                     </RuleSimpleTerm>
                   </RuleTerm>
                 </RuleSingleExpression>
               </RuleExpression>
               <Symbol> ; </Symbol>
             </RuleLetStatement>
           </RuleStatement>
           <RuleStatement>
             <RuleLetStatement Subtype="SubtypeLetArrayEqual">
               <Keyword> let </Keyword>
               <Identifier> v0 </Identifier>
               <Symbol> [ </Symbol>
               <RuleExpression>
                 <RuleSingleExpression Subtype="SubtypeTerm">
                   <RuleTerm>
                     <RuleSimpleTerm>
                       <Identifier> 2 </Identifier>
                     </RuleSimpleTerm>
                   </RuleTerm>
                 </RuleSingleExpression>
                 <RuleSingleExpression Subtype="SubtypeOpTerm">
                   <RuleOperator>
                     <Symbol> + </Symbol>
                   </RuleOperator>
                   <RuleTerm>
                     <RuleSimpleTerm>
                       <Identifier> 10000 </Identifier>
                     </RuleSimpleTerm>
                   </RuleTerm>
                 </RuleSingleExpression>
               </RuleExpression>
               <Symbol> ] </Symbol>
               <Symbol> = </Symbol>
               <RuleExpression>
                 <RuleSingleExpression Subtype="SubtypeTerm">
                   <RuleTerm>
                     <RuleSimpleTerm>
                       <Identifier> 1 </Identifier>
                     </RuleSimpleTerm>
                   </RuleTerm>
                 </RuleSingleExpression>
               </RuleExpression>
               <Symbol> ; </Symbol>
             </RuleLetStatement>
           </RuleStatement>
           <RuleStatement>
             <RuleDoStatement>
               <Keyword> do </Keyword>
               <RuleCallMethod Subtype="SubtypeCallFunction">
                 <Identifier> a </Identifier>
                 <Symbol> ( </Symbol>
                 <RuleExpressionList>
                   <RuleExpression>
                     <RuleSingleExpression Subtype="SubtypeTerm">
                       <RuleTerm>
                         <RuleComplexTerm Subtype="SubtypeArrayIndex">
                           <Identifier> v0 </Identifier>
                           <Symbol> [ </Symbol>
                           <RuleExpression>
                             <RuleSingleExpression Subtype="SubtypeTerm">
                               <RuleTerm>
                                 <RuleSimpleTerm>
                                   <Identifier> 2 </Identifier>
                                 </RuleSimpleTerm>
                               </RuleTerm>
                             </RuleSingleExpression>
                             <RuleSingleExpression Subtype="SubtypeOpTerm">
                               <RuleOperator>
                                 <Symbol> + </Symbol>
                               </RuleOperator>
                               <RuleTerm>
                                 <RuleSimpleTerm>
                                   <Identifier> 10000 </Identifier>
                                 </RuleSimpleTerm>
                               </RuleTerm>
                             </RuleSingleExpression>
                           </RuleExpression>
                           <Symbol> ] </Symbol>
                         </RuleComplexTerm>
                       </RuleTerm>
                     </RuleSingleExpression>
                   </RuleExpression>
                 </RuleExpressionList>
                 <Symbol> ) </Symbol>
               </RuleCallMethod>
               <Symbol> ; </Symbol>
             </RuleDoStatement>
           </RuleStatement>
         </RuleBody>
         <Symbol> } </Symbol>
       </RuleMethodBody>
     </RuleMethod>
   </RuleClassDescription>
   <Symbol> } </Symbol>
 </RuleClass>
</ClassList>
